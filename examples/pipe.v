/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.4.6. DO NOT MODIFY.
*/
`timescale 100fs/100fs
module system
    ( // Inputs
      input  clk // clock
    , input  rst // reset
    , input  en // enable
    , input [15:0] data_in

      // Outputs
    , output wire [15:0] after_n
    );
  // Clash.hs:12:1-7
  reg [15:0] s = 16'd0;
  wire [15:0] result;
  // Clash.hs:12:1-7
  reg [15:0] s_0 = 16'd0;
  wire [15:0] result_0;
  // Clash.hs:12:1-7
  reg [15:0] s_1 = 16'd0;

  assign after_n = (s * 16'd13) % 16'd17;

  // register begin
  always @(posedge clk or  posedge  rst) begin : s_register
    if ( rst) begin
      s <= 16'd0;
    end else if (en) begin
      s <= result;
    end
  end
  // register end

  assign result = (s_0 * 16'd13) % 16'd17;

  // register begin
  always @(posedge clk or  posedge  rst) begin : s_0_register
    if ( rst) begin
      s_0 <= 16'd0;
    end else if (en) begin
      s_0 <= result_0;
    end
  end
  // register end

  assign result_0 = (s_1 * 16'd13) % 16'd17;

  // register begin
  always @(posedge clk or  posedge  rst) begin : s_1_register
    if ( rst) begin
      s_1 <= 16'd0;
    end else if (en) begin
      s_1 <= data_in;
    end
  end
  // register end


endmodule

